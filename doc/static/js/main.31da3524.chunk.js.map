{"version":3,"sources":["context/game.js","components/checklist.js","pages/license-plates.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","plates","updatePlates","Checklist","onStateClicked","list","checked","console","log","Consumer","context","style","textAlign","display","flexDirection","alignItems","Object","keys","map","i","v","htmlFor","width","type","name","marginRight","defaultChecked","onChange","href","target","fontSize","platesObj","localStorage","getItem","JSON","parse","updateDB","db","obj","setItem","stringify","LicensePlates","state","index","val","length","key","this","Provider","value","Component","App","className","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEeA,G,MAAAA,IAAMC,cAAc,CAC/BC,OAAO,GACPC,aAAa,gB,QCwCFC,EAzCG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,KAAoB,EAAdC,QAEvC,OADJC,QAAQC,IAAIH,GAEJ,cAAC,EAAYI,SAAb,UAEQ,SAAAC,GACI,OAAQ,mCAEJ,sBAAMC,MAAO,CAAEC,UAAW,OAAQC,QAAQ,OAAQC,cAAc,SAAUC,WAAW,UAArF,SACKC,OAAOC,KAAKZ,GAAMa,KAAI,SAACC,EAAGC,GAQvB,OACI,wBAAeC,QAASD,EAAGT,MAAO,CAACW,MAAO,KAA1C,UACI,uBACAC,KAAK,WAELC,KAAML,EACNR,MAAO,CAACc,YAAa,QACrBC,gBAA2B,IAAVrB,EAAKc,GACtBQ,SAdR,WACIpB,QAAQC,IAAIH,EAAKc,IACjBf,EAAee,EAAEd,EAAKc,OAajBA,EARL,IAQQ,mBAAGS,KAAI,+CAA0CT,EAA1C,kBAA6DU,OAAO,MAAMlB,MAAO,CAACmB,SAAS,QAAlG,uBARIX,cChB5CY,EAAY,GACbC,aAAaC,QAAQ,eACtBF,EAAYG,KAAKC,MAAMH,aAAaC,QAAQ,eAG9C,IAAMG,EAAW,SAACC,EAAIC,GACpBN,aAAaO,QAAQF,EAAIH,KAAKM,UAAUF,KAuC3BG,E,4MAlCbC,MAAQ,CACNzC,OAAQ8B,G,EAEV7B,aAAe,SAACyC,EAAMC,GACpB,EAAKF,MAAMzC,OAAO0C,IAAUC,EAE5BR,EAAS,YAAa,EAAKM,MAAMzC,S,uDAKjC,GAAsC,IAAlCe,OAAOC,KAAKc,GAAWc,OAAc,CAAC,IAAD,gBADzB,CAAC,UAAW,SAAU,UAAW,WAAY,aAAc,WAAY,cAAe,WAAY,uBAAwB,UAAW,UAAW,SAAU,QAAS,WAAY,UAAW,OAAQ,SAAU,WAAY,YAAa,QAAS,WAAY,gBAAiB,WAAY,YAAa,cAAe,WAAY,UAAW,WAAY,SAAU,gBAAiB,aAAc,aAAc,WAAY,iBAAkB,eAAgB,OAAQ,WAAY,SAAU,eAAgB,eAAgB,iBAAkB,eAAgB,YAAa,QAAS,OAAQ,UAAW,WAAY,aAAc,gBAAiB,YAAa,YACnmB,IACvC,2BAA2B,CAAC,IAAjBC,EAAgB,QACzBC,KAAKL,MAAMzC,OAAO6C,IAAO,GAFY,+BAMzC,OACE,sBAAKnC,MAAO,CAACC,UAAW,UAAxB,UACI,oDACF,cAAC,EAAYoC,SAAb,CACEC,MAAO,CACLhD,OAAQ8C,KAAKL,MAAMzC,OACnBC,aAAc6C,KAAK7C,cAHvB,SAKI,cAAC,EAAD,CAAWE,eAAgB2C,KAAK7C,aAAcG,KAAM0C,KAAKL,MAAMzC,kB,GA3B/CiD,aCqBbC,E,uKArBX,OACE,qBAAKC,UAAU,MAAf,SACI,eAAC,IAAD,WACE,iCACE,6CAEF,+BACE,cAAC,IAAD,UACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWd,iB,GAb7BS,aCGHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31da3524.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n    plates:{},\r\n    updatePlates:()=>{}\r\n});","import React, { Component, useState } from 'react';\r\nimport GameContext from '../context/game';\r\n\r\nconst Checklist = ({ onStateClicked, list, checked }) => {\r\nconsole.log(list)\r\n    return (\r\n        <GameContext.Consumer>\r\n            {\r\n                context => {\r\n                    return (<>\r\n\r\n                        <form style={{ textAlign: \"left\", display:\"flex\", flexDirection:\"column\", alignItems:\"center\" }}>\r\n                            {Object.keys(list).map((i, v) => {\r\n                            \r\n                                function handleCheckboxClick(){\r\n                                    console.log(list[i]);\r\n                                    onStateClicked(i,list[i]);\r\n                                    \r\n                                }\r\n\r\n                                return(\r\n                                    <label key={i} htmlFor={v} style={{width: 300}}>\r\n                                        <input \r\n                                        type=\"checkbox\" \r\n                                        //checked={checked}\r\n                                        name={i} \r\n                                        style={{marginRight: '10px'}}\r\n                                        defaultChecked={(list[i]===true)?true:false}\r\n                                        onChange={handleCheckboxClick} />\r\n                                        {i} <a href={`https://www.bing.com/images/search?q=${i}+license+plate`} target=\"new\" style={{fontSize:\"12px\"}}>look up</a>\r\n                                    </label>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </form>\r\n                    </>)\r\n\r\n                }\r\n            }\r\n        </GameContext.Consumer>\r\n\r\n    )\r\n}\r\n\r\nexport default Checklist;","import React, {Component, useState} from 'react';\r\nimport {} from 'react-router-dom';\r\nimport GameContext from '../context/game';\r\nimport Checklist from '../components/checklist';\r\n\r\nlet platesObj = {};\r\nif(localStorage.getItem(\"cg-plates\")){\r\n  platesObj = JSON.parse(localStorage.getItem(\"cg-plates\"))\r\n}\r\n\r\nconst updateDB = (db, obj) => {\r\n  localStorage.setItem(db, JSON.stringify(obj))\r\n}\r\n\r\nclass LicensePlates extends Component {  \r\n\r\n  state = {\r\n    plates: platesObj,\r\n  }\r\n  updatePlates = (index,val) => {\r\n    this.state.plates[index] = !val;\r\n\r\n    updateDB(\"cg-plates\", this.state.plates)\r\n  }\r\n\r\n  render(){\r\n    const usaList = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\r\n    if (Object.keys(platesObj).length === 0) {\r\n      for (const key of usaList) {\r\n        this.state.plates[key] = false\r\n      }\r\n        \r\n    }\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n          <h2>License Plate Game</h2>\r\n        <GameContext.Provider\r\n          value={{\r\n            plates: this.state.plates,\r\n            updatePlates: this.updatePlates\r\n          }}>\r\n            <Checklist onStateClicked={this.updatePlates} list={this.state.plates}/>          \r\n        </GameContext.Provider>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LicensePlates;\r\n","import React, {Component, useState} from 'react';\nimport {\n  HashRouter  as Router,\n  Route,\n  Switch} from 'react-router-dom';\nimport './App.css';\nimport GameContext from './context/game';\nimport LicensePlates from \"./pages/license-plates\";\n\nclass App extends Component {  \n  \n\n  render(){\n    \n    return (\n      <div className=\"App\">\n          <Router >\n            <header>\n              <h1>Car Games</h1>\n            </header>\n            <main>\n              <Switch>\n              <Route path=\"/\" exact component={LicensePlates} />\n              </Switch>\n            </main>\n          </Router>\n\n          \n        \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}